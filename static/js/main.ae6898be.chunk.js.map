{"version":3,"sources":["common/Preloader/preloader.svg","common/Preloader/Preloader.module.css","component/FormTodoItem/FormTodoItem.module.scss","component/Navbar/Navbar.module.scss","component/TodoItem/TodoItem.module.scss","slice/app/appSlice.js","slice/todos/todoSlice.js","App/rootReducer.js","App/store.js","component/SortBtn/SortBtn.js","component/Controls/Controls.js","component/BtnAddTodo/BtnAddTodo.js","common/FormsControls/FormsControls.js","component/FormTodoItem/FormTodoItem.js","common/utils/validators.js","component/NewTodoItem/NewTodoItem.js","component/TodoItem/TodoItem.js","slice/todos/todoSelector.js","component/TodoList/TodoList.js","component/Inbox/Inbox.js","component/Today/Today.js","component/Calendar/Calendar.js","component/Navbar/Navbar.js","common/Preloader/Preloader.js","component/ToggleTheme/ToggleTheme.js","component/ToggleNavbar/ToggleNavbar.js","App/App.js","index.js","component/Controls/Controls.module.scss","common/FormsControls/FormsControls.module.scss","App/App.module.scss","component/BtnAddTodo/BtnAddTodo.module.scss","component/Inbox/Inbox.module.scss","component/SortBtn/SortBtn.module.scss","component/Today/Today.module.scss","component/Calendar/Calendar.module.scss","component/ToggleTheme/ToggleTheme.module.scss","component/ToggleNavbar/ToggleNavbar.module.scss"],"names":["module","exports","appSlice","createSlice","name","initialState","initialized","reducers","initializedSuccess","state","action","actions","todoSlice","todoList","JSON","parse","localStorage","getItem","sortType","allSortType","isReverseSort","sendTodoItem","newItem","text","payload","id","Date","now","completed","changeTodoItemText","map","item","toggleCompleted","deleteTodoItem","filter","sortBy","sort","doReverseSort","rootReducer","combineReducers","app","appReducer","todo","todoReducer","form","formReducer","store","configureStore","reducer","Container","compose","memo","type","dispatch","useDispatch","useSelector","className","styles","SortBtn","active","onClick","props","useState","isControlsOpen","setIsControlsOpen","Handle","toggleIsOpen","prev","overlay","Controls","openControls","dot","controlsList","key","setActiveField","BtnAddTodo","iconAdd","btnBody","FormsControls","input","meta","children","required","hasError","touched","error","value","length","undefined","formControl","textError","Component","textarea","reduxForm","enableReinitialize","saveFieldClick","handleSubmit","initialize","fieldRef","useRef","qwe","focusField","setFocusField","valueField","setValueField","useEffect","setCursorPosition","current","textContent","innerText","onSubmit","formData","reset","focus","changeField","evt","target","toggleFocus","cancel","parent","position","child","firstChild","nextSibling","nodeType","document","getSelection","collapse","maxLength","maxLengthCreator","FormTodoItem","containerField","ref","field","onSelect","onFocus","onBlur","contentEditable","Field","validate","component","placeholder","autoComplete","containerBtn","btn","send","activeField","inputBodyRef","TodoItem","check","success","checked","onChange","todoBody","onDoubleClick","change","delete","TodoSelector","getSortedTodoList","createSelector","items","isReverse","list","a","b","reverse","setItem","stringify","TodoList","Inbox","headerContainer","title","Today","Calendar","Navbar","link","activeClassName","to","Preloader","preloader","src","alt","isDarkTheme","toggle","ToggleTheme","darkTheme","isActiveNavbar","ToggleNavbar","setIsDarkTheme","setIsActiveNavbar","callback","App","header","nav","main","mainContainer","path","render","exact","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.ae6898be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.7869e84b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__Kjxcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormTodoItem\":\"FormTodoItem_FormTodoItem__3yGeh\",\"containerField\":\"FormTodoItem_containerField__3nb_l\",\"active\":\"FormTodoItem_active__wEB2F\",\"field\":\"FormTodoItem_field__1TCfd\",\"containerBtn\":\"FormTodoItem_containerBtn__P6ZJg\",\"btn\":\"FormTodoItem_btn__FPyt3\",\"send\":\"FormTodoItem_send__3mYwj\",\"cancel\":\"FormTodoItem_cancel__3RdaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__8ZwUj\",\"list\":\"Navbar_list__38HTJ\",\"item\":\"Navbar_item__giOMD\",\"link\":\"Navbar_link__2mXtU\",\"active\":\"Navbar_active__1JSu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__1FjjO\",\"check\":\"TodoItem_check__t644Q\",\"success\":\"TodoItem_success__3y7zN\",\"todoBody\":\"TodoItem_todoBody__kCQoU\",\"btn\":\"TodoItem_btn__1eviJ\",\"change\":\"TodoItem_change__3nMFv\",\"delete\":\"TodoItem_delete__2uRQK\"};","import { createSlice } from '@reduxjs/toolkit'\n\n\nconst appSlice = createSlice({\n    name: `todos`,\n    initialState: {\n        initialized: false,\n    },\n    reducers: {\n        initializedSuccess(state, action) {\n            state.initialized = true\n        }\n    }\n})\n\n\nexport const { initializedSuccess } = appSlice.actions\n\nexport default appSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\n\n\nconst todoSlice = createSlice({\n    name: `todo`,\n    initialState: {\n        todoList: JSON.parse(localStorage.getItem(`todoList`)) || [],\n        sortType: `date`,\n        allSortType: [`date`, `done`],\n        isReverseSort: false,\n    },\n    reducers: {\n        sendTodoItem(state, action) {\n            const { text } = action.payload\n            const newItem = {\n                text,\n                id: +`${Date.now()}`,\n                completed: false,\n            }\n            state.todoList = [\n                ...state.todoList, \n                newItem\n            ]\n        },\n        changeTodoItemText(state, action) {\n            const { text, id } = action.payload\n            state.todoList = state.todoList\n                .map((item) => item.id === id\n                    ? {\n                        ...item,\n                        text\n                    }\n                    : item\n                )\n        },\n        toggleCompleted(state, action) {\n            const { id } = action.payload\n            state.todoList = state.todoList\n                .map(item => item.id === id\n                    ? {\n                        ...item,\n                        completed: !item.completed\n                    }\n                    : item\n                )\n        },\n        deleteTodoItem(state, action) {\n            const { id } = action.payload\n            state.todoList = state.todoList\n                .filter(item => item.id !== id)\n        },\n        sortBy(state, action) {\n            const { sort } = action.payload\n            state.sortType = sort\n        },\n        doReverseSort(state, action) {\n            const { isReverseSort } = action.payload\n            state.isReverseSort = isReverseSort\n        }\n    }\n})\n\n\nexport const { sendTodoItem, changeTodoItemText, toggleCompleted, deleteTodoItem, sortBy, doReverseSort } = todoSlice.actions\n\nexport default todoSlice.reducer","import { combineReducers } from '@reduxjs/toolkit'\nimport { reducer as formReducer } from 'redux-form'\n\nimport appReducer from '../slice/app/appSlice'\nimport todoReducer from '../slice/todos/todoSlice'\n\nexport const rootReducer = combineReducers({\n    app: appReducer,\n    todo: todoReducer,\n    form: formReducer,\n})","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n})\r\n\r\n\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n        const newRootReducer = require('./rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\n\r\nexport default store","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { sortBy, doReverseSort } from '../../slice/todos/todoSlice'\r\n\r\nimport styles from './SortBtn.module.scss'\r\n\r\n\r\nconst SortBtn = ({ type, ...props }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst { sortType, isReverseSort } = useSelector((state) => state.todo)\t\r\n\t\r\n\t\r\n\tconst onSortedClick = (sort) => {\r\n\t\tdispatch(sortBy({ sort }))\r\n\t\tsortType === sort\r\n\t\t\t? dispatch(doReverseSort({ isReverseSort: !isReverseSort }))\r\n\t\t\t: dispatch(doReverseSort({ isReverseSort: false }))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<button className={`${styles.SortBtn} ${type === sortType ? styles.active : ``}`} onClick={() => onSortedClick(type)}>{type}</button>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(SortBtn)\r\n\r\nexport { Container as SortBtn }","import React, { memo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { compose } from 'redux'\n\nimport { SortBtn } from '../SortBtn/SortBtn'\n\nimport styles from './Controls.module.scss'\n\n\nconst Controls = ({ ...props }) => {\n\tconst { allSortType } = useSelector((state) => state.todo)\n\n\tconst [isControlsOpen, setIsControlsOpen] = useState(false)\n\n\n\tconst Handle ={\n\t\ttoggleIsOpen: () => {\n\t\t\tsetIsControlsOpen((prev) => !prev)\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t{isControlsOpen && \n\t\t\t\t<div \n\t\t\t\t\tclassName={`${styles.overlay}`}\n\t\t\t\t\tonClick={Handle.toggleIsOpen}>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<section \n\t\t\t\tclassName={`${styles.Controls}`}>\n\t\t\t\t<button \n\t\t\t\t\tclassName={`${styles.openControls}`}\n\t\t\t\t\tonClick={Handle.toggleIsOpen}>\n\t\t\t\t\t<span className={`visually-hidden`}>Выбрать сортировку</span>\n\t\t\t\t\t<span className={`${styles.dot}`}></span>\n\t\t\t\t</button>\n\n\t\t\t\t{isControlsOpen &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<section \n\t\t\t\t\t\t\tclassName={`${styles.controlsList}`}\n\t\t\t\t\t\t\tonClick={Handle.toggleIsOpen}>\n\t\t\t\t\t\t\t{allSortType\n\t\t\t\t\t\t\t\t.map(type => <SortBtn\n\t\t\t\t\t\t\t\t\tkey={type}\n\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t{...props} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\n\nconst Container = compose(\n\tmemo\n)(Controls)\n\nexport { Container as Controls } \n","import React, { memo } from 'react'\nimport { compose } from 'redux'\n\nimport styles from './BtnAddTodo.module.scss'\n\n\nconst BtnAddTodo = ({ setActiveField, ...props }) => {\n\treturn (\n\t\t<button \n\t\t\tclassName={`${styles.BtnAddTodo}`}\n\t\t\tonClick={() => setActiveField(1)}\n\t\t\t{...props}>\n\n\t\t\t<span className={`${styles.iconAdd}`}></span>\n\t\t\t\n\t\t\t<span className={`${styles.btnBody}`}>Добавить задачу</span>\n\t\t</button>\n\t)\n}\n\n\nconst Container = compose(\n\tmemo\n)(BtnAddTodo)\n\nexport { Container as BtnAddTodo }","import React from 'react'\r\nimport styles from './FormsControls.module.scss'\r\n\r\n\r\nconst FormsControls = ({ input, meta, children, required, ...props }) => {\r\n\tconst hasError = !required\r\n\t\t? input.value.length > 0 && meta.error\r\n\t\t: (meta.touched && meta.error) || (input.value.length > 0 && meta.error)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{children}\r\n\t\t\t<span error={hasError ? hasError : undefined} className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\r\n\t\t\t\t{hasError && <span className={styles.textError}>{meta.error}</span>}\r\n\t\t\t</span>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nexport const Component = {\r\n\ttextarea: ({ ...props }) => (\r\n\t\t<FormsControls {...props}>\r\n\t\t\t<textarea className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t),\r\n\r\n\tinput: ({ ...props }) => (\r\n\t\t<FormsControls required='true' {...props}>\r\n\t\t\t<input className={styles.text} {...props.input} {...props} />\r\n\t\t</FormsControls>\r\n\t)\r\n}\r\n\r\n\r\n// export const createField = (placeholder, name, validators, component, props={}, text=``) => (\r\n//   <p>\r\n//     <Field \r\n//       placeholder={placeholder}\r\n//       name={name}\r\n//       validate={validators}\r\n//       component={Component[component]}\r\n//       {...props}\r\n//     />{text}\r\n//   </p>\r\n// )","\n\nimport React, { memo, useState, useEffect, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { compose } from 'redux'\nimport { Field, reduxForm, reset } from 'redux-form'\n\nimport { sendTodoItem } from '../../slice/todos/todoSlice'\nimport { Component } from '../../common/FormsControls/FormsControls'\nimport { maxLengthCreator } from '../../common/utils/validators'\n\nimport styles from './FormTodoItem.module.scss'\n\n\nconst FormTodoItem = ({ text=``, active=true, saveFieldClick, handleSubmit, initialize, setActiveField, ...props }) => {\n\tconst dispatch = useDispatch()\n\n\tconst fieldRef = useRef(null)\n\tconst qwe = useRef(null)\n\n\tconst [focusField, setFocusField] = useState(false)\n\tconst [valueField, setValueField] = useState(text)\n\t\n\n\tuseEffect(() => {\n\t\tinitialize({todo: valueField})\n\t}, [valueField])\n\n\tuseEffect(() => {\n\t\tif(active) {\n\t\t\tHandle.focusField()\n\t\t\tHandle.setCursorPosition(qwe, fieldRef.current.textContent.length)\n\t\t}\n\t}, [active])\n\t\n\tuseEffect(() => {\n\t\tfieldRef.current.innerText = text\n\t\tHandle.setCursorPosition(qwe, fieldRef.current.textContent.length)\n\t}, [text])\n\n\n\tconst Handle = {\n\t\tonSubmit: (formData) => {\n\t\t\tif(!text) {\n\t\t\t\tdispatch(sendTodoItem({ text: formData.todo }))\n\t\t\t\tdispatch(reset(`FormTodoItem`))\n\t\t\t\tsetValueField(``)\n\t\t\t\tfieldRef.current.innerText = ``\n\t\t\t\tfieldRef.current.focus()\n\t\t\t} else {\n\t\t\t\tsaveFieldClick(valueField)\n\t\t\t\tsetActiveField(null)\n\t\t\t}\n\t\t},\n\t\tchangeField: (evt) => {\n\t\t\tsetValueField(evt.target.innerText)\n\t\t},\n\t\ttoggleFocus: () => {\n\t\t\tsetFocusField((prev) => !prev)\n\t\t},\n\t\tfocusField: () => {\n\t\t\tfieldRef.current.focus()\n\t\t},\n\t\tcancel: () => {\n\t\t\tfieldRef.current.innerText = text\n\t\t\tsetValueField(text)\n\t\t\tsetActiveField(null)\n\n\t\t\tif(!text) {\n\t\t\t\tdispatch(reset(`FormTodoItem`))\n\t\t\t}\n\t\t},\n\n\t\tsetCursorPosition: (parent, position) => {\n\t\t\tlet child = parent.current.firstChild\n\t\t\twhile(position > 0) {\n\t\t\t\tlet length = child.textContent.length\n\t\t\t\tif(position > length) {\n\t\t\t\t\tposition -= length\n\t\t\t\t\tchild = child.nextSibling\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(child.nodeType === 3) return document.getSelection().collapse(child, position)\n\t\t\t\t\tchild = child.firstChild\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t// setCursorPosition: (ref) => {\n\t\t// \tlet length = ref.current.textContent.length\n\n\t\t// \tif(ref.nodeType == 3) return document.getSelection().collapse(ref, length)\n\t\t// \tref = ref.firstChild\n\t\t// }\n\t}\n\n\n\tconst maxLength = maxLengthCreator(2000)\n\n\n\treturn (\n\t\t<form \n\t\t\tclassName={`${styles.FormTodoItem}`} \n\t\t\tonSubmit={handleSubmit(Handle.onSubmit)}>\n\t\t\t<div \n\t\t\t\tclassName={`\n\t\t\t\t\t${styles.containerField}\n\t\t\t\t\t${focusField ? styles.active : ``}\n\t\t\t\t`}\n\t\t\t\tref={qwe}\n\t\t\t\tonClick={Handle.focusField}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${styles.field}`}\n\t\t\t\t\tonSelect={(evt) => Handle.changeField(evt)}\n\t\t\t\t\tonFocus={Handle.toggleFocus}\n\t\t\t\t\tonBlur={Handle.toggleFocus}\n\t\t\t\t\tcontentEditable={`true`}\n\t\t\t\t\tref={fieldRef}/>\n\n\t\t\t\t<Field\n\t\t\t\t\tclassName={`visually-hidden`}\n\t\t\t\t\tvalidate={[maxLength]}\n\t\t\t\t\tcomponent={Component.input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"todo\"\n\t\t\t\t\tplaceholder={`New todo`}\n\t\t\t\t\tautoComplete=\"off\" />\n\t\t\t</div>\n\t\t\t<div className={`${styles.containerBtn}`}>\n\t\t\t\t{text \n\t\t\t\t\t? <button className={`${styles.btn} ${styles.send}`}>\n\t\t\t\t\t\tСохранить\n\t\t\t\t\t</button>\n\t\t\t\t\t: <button className={`${styles.btn} ${styles.send}`}>\n\t\t\t\t\t\tДобавить задачу\n\t\t\t\t\t</button>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t<button \n\t\t\t\t\tclassName={`${styles.btn} ${styles.cancel}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tHandle.cancel()\n\t\t\t\t\t\tsetActiveField(null)\n\t\t\t\t\t}}\n\t\t\t\t\ttype={`button`}>\n\t\t\t\t\tОтмена\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\n\nconst Container = compose(\n\treduxForm({ form: `FormTodoItem`, enableReinitialize: true }),\n\tmemo\n)(FormTodoItem)\n\nexport { Container as FormTodoItem }","export const required = (value) => {\r\n  return(!value)\r\n    ? `Field is required`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  return(value && value.length > maxLength)\r\n    ? `Max length is ${maxLength} symbols`\r\n    : undefined\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n  return(value && value.length < minLength)\r\n    ? `Min length is ${minLength} symbols`\r\n    : undefined\r\n}","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\n\r\nimport { BtnAddTodo } from '../BtnAddTodo/BtnAddTodo'\r\nimport { FormTodoItem } from '../FormTodoItem/FormTodoItem'\r\n\r\n\r\nconst NewTodoItem = ({ activeField, setActiveField, ...props }) => {\r\n\treturn (\r\n\t\tactiveField === 1\r\n\t\t? <FormTodoItem setActiveField={setActiveField} />\r\n\t\t: <BtnAddTodo setActiveField={setActiveField} />\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(NewTodoItem)\r\n\r\n\r\nexport { Container as NewTodoItem }","import React, { memo, useRef } from 'react'\r\nimport { compose } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { changeTodoItemText, toggleCompleted, deleteTodoItem } from '../../slice/todos/todoSlice'\r\nimport { FormTodoItem } from '../FormTodoItem/FormTodoItem'\r\n\r\nimport styles from './TodoItem.module.scss'\r\n\r\n\r\nconst TodoItem = ({ setActiveField, active, text, id, completed, ...props }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const inputBodyRef = useRef(null)\r\n\r\n\r\n    const Handle = {\r\n        changeField: (text) => {\r\n            dispatch(changeTodoItemText({ text, id }))\r\n        },\r\n        toggleCompleted: () => {\r\n            dispatch(toggleCompleted({ id }))\r\n        },\r\n        deleteTodoItem: (id) => {\r\n            dispatch(deleteTodoItem({ id }))\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        active\r\n        ? <FormTodoItem \r\n            text={text} \r\n            id={id} \r\n            active={active}\r\n            saveFieldClick={Handle.changeField}\r\n            setActiveField={setActiveField} />\r\n\r\n        : <li className={`${styles.TodoItem}`}>\r\n            <label \r\n                className={`\r\n                    ${styles.check} \r\n                    ${completed ? styles.success : ``}`}>\r\n                \r\n                <input\r\n                    className={`visually-hidden`}\r\n                    checked={completed}\r\n                    type='checkbox'\r\n                    onChange={Handle.toggleCompleted}/>\r\n            </label>\r\n            <div \r\n                className={`${styles.todoBody}`}\r\n                ref={inputBodyRef}\r\n                onClick={Handle.toggleCompleted}\r\n                onDoubleClick={() => setActiveField(id)}\r\n                onChange={evt => Handle.changeField(evt.target.value, id)}>\r\n                {text}\r\n            </div>\r\n            <button\r\n                className={`\r\n                    ${styles.btn} \r\n                    ${styles.change}`}\r\n                onClick={() => setActiveField(id)}>\r\n                change\r\n            </button>\r\n            <button \r\n                className={`\r\n                    ${styles.btn} \r\n                    ${styles.delete}`}\r\n                onClick={() => Handle.deleteTodoItem(id)}>&times;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nconst Container = compose(\r\n    memo\r\n)(TodoItem)\r\n\r\nexport { Container as TodoItem }","import { createSelector } from 'reselect'\r\n\r\n\r\nconst TodoSelector = {\r\n\ttodoList: (state) => state.todo.todoList,\r\n\tsortType: (state) => state.todo.sortType,\r\n\tisReverseSort: (state) => state.todo.isReverseSort,\r\n}\r\n\r\n\r\nexport const getSortedTodoList = createSelector(\r\n\tTodoSelector.todoList, TodoSelector.sortType, TodoSelector.isReverseSort,\r\n\t(items, sortType, isReverse) => {\r\n\t\tlet list = [...items]\r\n\t\tswitch (sortType) {\r\n\t\t\tcase `date`:\r\n\t\t\t\tlist.sort((a, b) => a.id - b.id)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase `done`:\r\n\t\t\t\tlist.sort((a, b) => a.completed - b.completed)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t!isReverse\r\n\t\t\t\t? list\r\n\t\t\t\t: list.reverse()\r\n\t\t)\r\n\t})","import React, { memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport { TodoItem } from '../TodoItem/TodoItem'\r\n\r\nimport { getSortedTodoList } from '../../slice/todos/todoSelector'\r\n\r\nimport styles from './TodoList.module.scss'\r\n\r\n\r\nconst TodoList = ({ activeField, setActiveField, ...props }) => {\r\n\tconst todoList = useSelector(getSortedTodoList)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(`todoList`, JSON.stringify(todoList))\r\n\t}, [todoList])\r\n\r\n\r\n\treturn (\r\n\t\t<ul className={`${styles.TodoList}`}>\r\n\t\t\t{todoList.map((item) => <TodoItem \r\n\t\t\t\tactive={activeField === item.id}\r\n\t\t\t\tsetActiveField={setActiveField}\r\n\t\t\t\tkey={item.id} \r\n\t\t\t\t{...item} />\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(TodoList)\r\n\r\nexport { Container as TodoList }","import React, { memo, useState } from 'react'\nimport { compose } from 'redux'\n\nimport { Controls } from '../Controls/Controls'\nimport { NewTodoItem } from '../NewTodoItem/NewTodoItem'\nimport { TodoList } from '../TodoList/TodoList'\n\nimport styles from './Inbox.module.scss'\n\n\nconst Inbox = ({ ...props }) => {\n\tconst [activeField, setActiveField] = useState(null)\n\n\n\treturn (\n\t\t<section className={`${styles.Inbox}`}>\n\t\t\t<div className={`${styles.headerContainer}`}>\n\t\t\t\t<h2 className={`${styles.title}`}>Входящие</h2>\n\t\t\t\t<Controls />\n\t\t\t</div>\n\n\t\t\t<TodoList \n\t\t\t\tactiveField={activeField} \n\t\t\t\tsetActiveField={setActiveField}/>\n\t\t\t<NewTodoItem \n\t\t\t\tactiveField={activeField} \n\t\t\t\tsetActiveField={setActiveField}/>\n\t\t</section>\n\t)\n}\n\n\nconst Container = compose(\n\tmemo\n)(Inbox)\n\nexport { Container as Inbox } ","import React, { memo } from 'react'\nimport { compose } from 'redux'\n\nimport styles from './Today.module.scss'\n\n\nconst Today = ({ ...props }) => {\n\treturn (\n\t\t<section className={`${styles.Today}`}>\n\t\t\t<h2 className={`${styles.title} mb-4`}>Сегодня</h2>\n\n\t\t</section>\n\t)\n}\n\n\nconst Container = compose(\n\tmemo\n)(Today)\n\nexport { Container as Today } ","import React, { memo } from 'react'\nimport { compose } from 'redux'\n\nimport styles from './Calendar.module.scss'\n\n\nconst Calendar = ({ ...props }) => {\n\treturn (\n\t\t<section className={`${styles.Calendar}`}>\n\t\t\t<h2 className={`${styles.title} mb-4`}>Предстоящее</h2>\n\n\t\t</section>\n\t)\n}\n\n\nconst Container = compose(\n\tmemo\n)(Calendar)\n\nexport { Container as Calendar } ","import React, { memo } from 'react'\r\nimport { compose } from 'redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport styles from './Navbar.module.scss'\r\n\r\n\r\nconst Navbar = ({ ...props }) => {\r\n\treturn (\r\n\t\t<nav className={`${props.className} ${styles.Navbar}`}>\r\n\t\t\t<ul className={`${styles.list}`}>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/inbox`}>Входящие</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/today`}>Сегодня</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className={`${styles.item}`}>\r\n\t\t\t\t\t<NavLink className={`${styles.link}`} activeClassName={styles.active} to={`/calendar`}>Календарь</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nconst Container = compose(\r\n\tmemo\r\n)(Navbar)\r\n\r\nexport { Container as Navbar }","import React from 'react';\r\nimport preloader from './preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<section className={styles.preloader}>\r\n\t\t\t<img src={preloader} alt='loading' />\r\n\t\t</section>\r\n\t)\r\n}","import React, { memo } from 'react'\nimport { compose } from 'redux'\n\nimport styles from './ToggleTheme.module.scss'\n\n\nconst ToggleTheme = ({ isDarkTheme, toggle, ...props }) => {\n    return (\n        <button\n            className={`\n                ${styles.ToggleTheme} \n                ${isDarkTheme ? styles.darkTheme : ``} \n                btn`}\n            onClick={toggle}\n        >\n        </button>\n    )\n}\n\n\nconst Container = compose(\n    memo\n)(ToggleTheme)\n\nexport { Container as ToggleTheme }","import React, { memo } from 'react'\nimport { compose } from 'redux'\n\nimport styles from './ToggleNavbar.module.scss'\n\n\nconst ToggleNavbar = ({ isActiveNavbar, toggle, ...props }) => {\n    return (\n        <button\n            className={`\n                ${styles.ToggleNavbar}\n                ${isActiveNavbar ? styles.active : ``}\n                btn    \n            `}\n            onClick={toggle}\n        >\n        </button>\n    )\n}\n\n\nconst Container = compose(\n    memo\n)(ToggleNavbar)\n\nexport { Container as ToggleNavbar }","import React, { memo, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { compose } from 'redux'\n\nimport { initializedSuccess } from '../slice/app/appSlice'\n\nimport { Inbox } from '../component/Inbox/Inbox'\nimport { Today } from '../component/Today/Today'\nimport { Calendar } from '../component/Calendar/Calendar'\nimport { Navbar } from '../component/Navbar/Navbar'\nimport { Preloader } from '../common/Preloader/Preloader'\nimport { ToggleTheme } from '../component/ToggleTheme/ToggleTheme'\nimport { ToggleNavbar } from '../component/ToggleNavbar/ToggleNavbar'\n\nimport styles from './App.module.scss'\n\n\nconst App = ({ ...props }) => {\n\tconst [isDarkTheme, setIsDarkTheme] = useState(false)\n\tconst [isActiveNavbar, setIsActiveNavbar] = useState(false)\n\n\tconst dispatch = useDispatch()\n\n\tconst { initialized } = useSelector((state) => state.app)\n\n\n\tuseEffect(() => {\n\t\tdispatch(initializedSuccess())\n\t}, [dispatch])\n\n\n\tconst Handle = {\n\t\ttoggle: (callback) => {\n\t\t\tcallback((prev) => !prev)\n\t\t}\n\t}\n\n\n\treturn (\n\t\t!initialized\n\t\t\t? <Preloader />\n\t\t\t: <div className={`${isDarkTheme ? `darkTheme` : ``} ${styles.App}`}>\n\t\t\t\t<header className={`${styles.header}`}>\n\t\t\t\t\t<h1 className={`visually-hidden`}>Todo list</h1>\n\t\t\t\t\t<ToggleNavbar\n\t\t\t\t\t\tisActiveNavbar={isActiveNavbar}\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsActiveNavbar)}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleTheme\n\t\t\t\t\t\tisDarkTheme={isDarkTheme}\n\t\t\t\t\t\ttoggle={() => Handle.toggle(setIsDarkTheme)}\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\t\t\t\t{isActiveNavbar && <Navbar className={styles.nav} />}\n\t\t\t\t<main className={`${styles.main}`}>\n\t\t\t\t\t<div className={`${styles.mainContainer}`}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/inbox' render={() => <Inbox />} />\n\t\t\t\t\t\t\t<Route path='/today' render={() => <Today />} />\n\t\t\t\t\t\t\t<Route path='/calendar' render={() => <Calendar />} />\n\t\t\t\t\t\t\t<Route path='/' exact render={() => <Inbox />} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</div>\n\t)\n}\n\n\nexport default compose(\n\tmemo\n)(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n//HashRouter для gh-pages\nimport { HashRouter, BrowserRouter } from 'react-router-dom'\n\nimport store from './App/store'\nimport App from './App/App'\n\nimport './index.scss'\nimport './assets/css/vars.css'\nimport './assets/css/reset.css'\n\nReactDOM.render(\n  <HashRouter basename={'https://kirilovvladislav.github.io/todo-list/'}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__1QezX\",\"openControls\":\"Controls_openControls__rHbhR\",\"dot\":\"Controls_dot__Yq3iQ\",\"controlsList\":\"Controls_controlsList__2aQVm\",\"overlay\":\"Controls_overlay__rTsEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1k-Ht\",\"error\":\"FormsControls_error__bauyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1JN69\",\"nav\":\"App_nav__2qex2\",\"header\":\"App_header__1Xt5M\",\"main\":\"App_main__3N4Nf\",\"mainContainer\":\"App_mainContainer__cKELM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnAddTodo\":\"BtnAddTodo_BtnAddTodo__1bM5Y\",\"iconAdd\":\"BtnAddTodo_iconAdd__eATYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inbox\":\"Inbox_Inbox__2SPk2\",\"headerContainer\":\"Inbox_headerContainer__2reLs\",\"title\":\"Inbox_title__3qNZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SortBtn\":\"SortBtn_SortBtn__3Wzwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Today\":\"Today_Today__2YHcl\",\"title\":\"Today_title__1wvys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__1iSjJ\",\"title\":\"Calendar_title__3key4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleTheme\":\"ToggleTheme_ToggleTheme__b6XxB\",\"darkTheme\":\"ToggleTheme_darkTheme__1w6mK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleNavbar\":\"ToggleNavbar_ToggleNavbar__CCFqz\",\"active\":\"ToggleNavbar_active__g6Dii\"};"],"sourceRoot":""}